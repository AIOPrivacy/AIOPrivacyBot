name: Go Build and Release

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go 1.22.4
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.4

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go 1.22.4
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.4

      - name: Install dependencies
        run: go mod tidy

      - name: Cross-compile binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o dist/linux_amd64/AIOPrivacyBot
          GOOS=linux GOARCH=arm64 go build -o dist/linux_arm64/AIOPrivacyBot
          GOOS=darwin GOARCH=amd64 go build -o dist/darwin_amd64/AIOPrivacyBot
          GOOS=darwin GOARCH=arm64 go build -o dist/darwin_arm64/AIOPrivacyBot
          GOOS=windows GOARCH=amd64 go build -o dist/windows_amd64/AIOPrivacyBot.exe
          GOOS=windows GOARCH=arm64 go build -o dist/windows_arm64/AIOPrivacyBot.exe

      - name: Create release notes
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Release of version ${{ github.run_number }}
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/
          asset_name: AIOPrivacyBot
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
